#!/bin/sh
# Copyright 2008-2010 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

#
# This creates a pkg-config frontend that has the form TARGET-pkg-config
# as this is the utility that autoconf scripts will automatically search
# for when cross-compiling for TARGET.  Here we setup the pkg config env
# paths so that the .pc files that are searched and used come from the
# staging directory rather than the host system.
#

#
# Helper functions.  So very helpful.
#
msg_to_stderr() { echo "cross-pkg-config: $*" 1>&2 ; }
warn() { msg_to_stderr "warning: $*" ; }
error() {
	msg_to_stderr "error: $*"
	exit 1
}

#
# Sanity/distro checks
#
MIN_VER="0.20" # 0.24+ has working PKG_CONFIG_SYSROOT_DIR
if ! pkg-config --atleast-pkgconfig-version ${MIN_VER} ; then
	error pkg-config is too old ... upgrade to at least v${MIN_VER}
fi

if [ "$1" = "--cross-pkg-config-install" ] ; then
	# --cross-pkg-config-install <sysroot dir> [pkg-config wrapper]
	pkg_path="$2"
	pkg_config="${3:-$0}"
	sed -i.tmp \
		-e "s:@CROSS_PKG_CONFIG_INSTALLED@:installed:" \
		-e "s:@CROSS_PKG_CONFIG_PATH@:$pkg_path:" \
		"$pkg_config"
	rm -f "$pkg_config".tmp
	chmod a+rx "$pkg_config"
	exit 0
fi

unset EXTRA_PKG_CONFIG_LIBDIR
if [ "@CROSS_PKG_CONFIG_INSTALLED@" = "installed" ] ; then
	# Manual install
	SYSROOT="@CROSS_PKG_CONFIG_PATH@"
elif [ -n "${ROOT}" ] ; then
	# Gentoo
	SYSROOT=${ROOT}
elif [ -n "${STAGEDIR}" ] ; then
	# uClinux-dist
	SYSROOT=${STAGEDIR}
	EXTRA_PKG_CONFIG_LIBDIR=${UCLINUX_PKG_CONFIG_LIBDIR}
else
	# /usr/<target>
	CHOST=${0##*/}
	CHOST=${CHOST%-pkg-config}
	SYSROOT="/usr/${CHOST}"
	if [ -z "${CHOST}" ] || [ ! -d "${SYSROOT}" ] ; then
		error "Need \$ROOT or \$STAGEDIR set first"
	fi
fi
# abort infinite loop due to misconfiguration
[ "${0##*/}" = "pkg-config" ] && error "aborting infinite loop! (make sure to delete uClinux-dist/tools/pkg-config)"

#
# Some distributions pollute the pkg-config environment.
# Time to pull a captain planet on them.
#
unset PKG_CONFIG_PATH
unset PKG_CONFIG_ALLOW_SYSTEM_CFLAGS
unset PKG_CONFIG_ALLOW_SYSTEM_LIBS

#
# Set the pkg-config search paths to our staging directory.
#
export PKG_CONFIG_LIBDIR="${SYSROOT}/usr/lib/pkgconfig:${SYSROOT}/usr/share/pkgconfig"
if [ -n "${EXTRA_PKG_CONFIG_LIBDIR}" ] ; then
	PKG_CONFIG_LIBDIR="${EXTRA_PKG_CONFIG_LIBDIR}:${PKG_CONFIG_LIBDIR}"
fi
#
# This guy is horribly broken in pkg-config <=0.23:
#	https://bugs.freedesktop.org/show_bug.cgi?id=16905
#
#export PKG_CONFIG_SYSROOT_DIR="${SYSROOT}"
unset PKG_CONFIG_SYSROOT_DIR

#
# Sanity check the output to catch common errors that do not
# cause failures until much later on.
#
output=$(pkg-config "$@")
ret=$?

#
# Inject PKG_CONFIG_SYSROOT_DIR ourselves until pkg-config is fixed.
# We can't mung the .pc files as some of the vars are used at compile
# time to encode runtime paths.
#
output=$(echo "${output}" | sed -e 's:\(-[IL][[:space:]]*\)\(/usr\):\1'"${SYSROOT}"'\2:g')

case " ${output} " in
	*" -L/usr/lib "*|*" -L/usr/local/lib "*|\
	*" -L /usr/lib "*|*" -L /usr/local/lib "*|\
	*" -L/usr/lib64 "*|*" -L/usr/local/lib64 "*|\
	*" -L /usr/lib64 "*|*" -L /usr/local/lib64 "*)
		warn "### falling down so here is a dump state ######"
		export PKG_CONFIG_DEBUG_SPEW="yes"
		pkg-config --debug "$@" 1>&2
		warn "### end of dump ###############################"
		error "host -L paths detected: ${output}"
		;;
	*" -I/usr/include"*|*" -I/usr/local/include"*)
		warn "### falling down so here is a dump state ######"
		export PKG_CONFIG_DEBUG_SPEW="yes"
		pkg-config --debug "$@" 1>&2
		warn "### end of dump ###############################"
		error "host -I paths detected: ${output}"
		;;
esac
[ -n "${output}" ] && echo "${output}"
exit ${ret}
