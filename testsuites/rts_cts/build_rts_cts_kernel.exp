#!/usr/bin/expect

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites
step "Make config."
source make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
    expect {
        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "Blackfin serial port support.*SERIAL_BFIN.*\\\[.*]" {
            send "Y\r"
        }

        -re "Enable UART0.*SERIAL_BFIN_UART0.*\\\[.*]" {
           if { $board_type == "BF537-STAMP" } {
                send "Y\r"
            } else {
                send "\r"
            }
        }

        -re "Enable UART0 hardware flow control.*BFIN_UART0_CTSRTS.*\\\[.*]" {
           if { $board_type == "BF537-STAMP" } {
                send "Y\r"
            } else {
                send "\r"
            }
        }

        -re "Enable UART1.*SERIAL_BFIN_UART1.*\\\[.*]" {
           if { $board_type == "BF548-EZKIT" } {
                send "Y\r"
            } else {
                send "\r"
            }
        }

        -re "Enable UART1 hardware flow control.*BFIN_UART1_CTSRTS.*\\\[.*]" {
           if { $board_type == "BF548-EZKIT" } {
                send "Y\r"
            } else {
                send "\r"
            }
        }

        -re "RTS/CTS test program.*USER_BLACKFIN_RTSCTSTEST.*\\\[.*]" {
            send "Y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"

        }
    }
}

cd $uclinux_path/testsuites
step "Make"
source make_kernel.exp

cd $uclinux_path/testsuites
step "Copy linux"
source copy_image.exp

send_user "Ending $argv0\n"
log_file
