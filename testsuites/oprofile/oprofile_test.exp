#!/usr/bin/expect

source  ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

if { $argc < 2} {
    puts "Please input:binary format (FDPIC or FLAT)"
    exit
}

set format [lindex $argv 1]
send_user "\n#### binary format is $format\n"
append TITLE " ($format)"

step "Spawn kermit"
source ../spawn_kermit.exp

step "Reboot the kernel."
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated,
# for it is the default value.
# set bootargs 	$bootargs_param0
source ../reboot_kernel.exp
sleep 20

step "Start oprofile kernel test"
set case_num 0

incr case_num
set timeout 2
send "/usr/bin/bfin_opcontrol --init\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            send_user "\nInit timeout\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 2
send "/usr/bin/bfin_opcontrol --start-daemon &\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re "Using 2.6\\\+ OProfile kernel interface.*oprofiled\.log" {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\nStart daemon timeout\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 2
send "/usr/bin/bfin_opcontrol --start\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\n--start timeout\n"
            case_fail $case_num
        }
    }
}

send "ls\r"
expect -re $kernel_prompt

incr case_num
set timeout 2
send "/usr/bin/bfin_opcontrol --dump\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\n--dump timeout\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 30
send "/usr/bin/opreport -l\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            expect -re $kernel_prompt
            case_fail $case_num
        }
        -re "Profiling through timer interrupt.*symbol name.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\nopreport timeout\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 2
send "/usr/bin/bfin_opcontrol --dump\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\n--dump timeout\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 30
send "/usr/bin/opreport -l\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            expect -re $kernel_prompt
            case_fail $case_num
        }
        -re "Profiling through timer interrupt.*symbol name.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\nopreport timeout\n"
            case_fail $case_num
        }
    }
}

step "Start oprofile test against user application"
source ../reboot_kernel.exp

sleep 20
if {$format == "FLAT"} {
    incr case_num
    send_user "rcp ../../user/whetstone/whetstone.gdb root@$targetip:/bin/\n"
    if [ catch {exec rcp ../../user/whetstone/whetstone.gdb root@$targetip:/bin/} ] {
        send_user "FAIL: rcp whetstone.gdb to host PC\n"
        send_user "$errorInfo\n"
        case_fail $case_num
    } else {
        send_user "PASS: rcp whetstone.gdb to host PC\n"
        case_pass $case_num
    }
}

incr case_num
set timeout 2
send "/usr/bin/bfin_opcontrol --init\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            send_user "\nInit timeout\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 2
send "/usr/bin/oprofiled -e '' --no-vmlinux --image=/bin/whetstone &\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re "Using 2.6\\\+ OProfile kernel interface.*oprofiled\.log" {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\nStart oprofiled timeout\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 2
send "/usr/bin/bfin_opcontrol --start\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\n--start timeout\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 30
send "/bin/whetstone\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re "C Converted Double Precision Whetstones.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\n--start timeout\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 2
send "/usr/bin/bfin_opcontrol --dump\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\n--dump timeout\n"
            case_fail $case_num
        }
    }
}

if {$format == "FLAT"} {
    incr case_num
    set timeout 10
    send "mv /bin/whetstone.gdb /bin/whetstone\r"
    while 1 {
        expect {
            -re "no|\[eE]rror|\[fF]ail" {
                case_fail $case_num
            }
            -re $kernel_prompt {
                case_pass $case_num
                break
            }
            timeout {
                send_log "mv timeout\n"
                case_fail $case_num
            }
        }
    }
}

incr case_num
set timeout 30
send "/usr/bin/opreport -lw\r"
while 1 {
    expect {
        -re "not found|\[eE]rror|\[fF]ail|Hardware Trace" {
            expect -re $kernel_prompt
            case_fail $case_num
        }
        -re "Profiling through timer interrupt.*symbol name.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            send_log "\nopreport timeout\n"
            case_fail $case_num
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
