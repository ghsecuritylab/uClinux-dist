#!/usr/bin/expect

source  ../kernel_config.exp

log_file [log_file_name "$argv0"]

send_user "Starting $argv0\n"

set TITLE [title "$argv0"]

step "Spawn kermit"
source ../spawn_kermit.exp

step "Reboot the kernel."
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated, 
# for it is the default value.
# set bootargs 	$bootargs_param0   
source ../reboot_kernel.exp 

set case_number1 9
set case_number2 4 
 
step "Start testing."

set timeout 5

send "cd /bin\r" 
while 1 {
   expect {
      "bin" {         
         break
      }

      timeout { 
                case_fail $case_num
	exit
      }
   }
}

set case_num 0
incr case_num

set timeout 20
set pass_num1 0
set pass_num2 0

send -s  "./fixed_code \r"
for { set j 0 } { $j < $case_number1 } { incr j 1 } { 
while 1 {
   expect {
      -re "PASS: test_.*" {
         incr pass_num1  
         break
      }

       -re "FAIL|fail" {
          case_fail $case_num
        }

      timeout {
         case_fail $case_num
         }
     }
}
}

send -s  "./fixed_code_p \r"
for { set j 0 } { $j < $case_number2 } { incr j 1 } { 
while 1 {
   expect {
      -re "PASS: test_.*" {
         incr pass_num2  
         break
      }

       -re "FAIL|fail" {
          case_fail $case_num
        }

      timeout {
          case_fail $case_num
         }
     }
}
}
if { $pass_num1 == $case_number1 || $pass_num2 == $case_number2 } {
   send_log "\n"
   send_log "\n$TITLE ............\[PASS\]\n"
} else {
   send_log "\n"
   case_fail $case_num
}

send_user "Ending $argv0\n"

log_file

