#!/usr/bin/expect

#disable unimportant drivers and utilities

cd $uclinux_path
set timeout 300
spawn make config
while 1 {
    expect {
        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "Suspend to RAM and standby.*SUSPEND.*\\\[.*]" {
            send "N\r"
        }

        -re "Enable ZFLAT support.*BINFMT_ZFLAT.*\\\[.*]" {
            send "N\r"
        }

        -re "Watchdog Timer Support.*WATCHDOG.*\\\[.*]" {
            send "N\r"
        }

        -re "Generic input layer.*needed for keyboard, mouse.*INPUT.*\\\[.*]" {
            send "N\r"
        }

#######################################################################################

        -re "boa.*USER_BOA_SRC_BOA.*\\\[.*]" {
            send "N\r"
        }

        -re "dhrystone.*USER_DHRYSTONE_DHRYSTONE.*\\\[.*]" {
            send "N\r"
        }

        -re "whetstone.*USER_WHETSTONE_WHETSTONE.*\\\[.*]" {
            send "N\r"
        }

        -re "VIDEO test program.*USER_BLACKFIN_VIDEOTEST.*\\\[.*]" {
            send "N\r"
        }

        -re "TWI LCD test program.*USER_BLACKFIN_TWILCDTEST.*\\\[.*]" {
            send "N\r"
        }

        -re "netperf.*USER_NETPERF_NETPERF.*\\\[.*]" {
            send -s "N\r"
        }

        -re "netserver.*USER_NETPERF_NETSERVER.*\\\[.*]" {
            send -s "N\r"
        }

        -re "strace.*USER_STRACE_STRACE.*\\\[.*]" {
            send "N\r"
        }

        -re "dhcp.*USER_DHCP.*\\\[.*]" {
            send "N\r"
        }

        -re "pngview.*USER_PNGVIEW.*\\\[.*]" {
            send "N\r"
        }

        -re "jpegview.*USER_JPEGVIEW_JPEGVIEW.*\\\[.*]" {
            send "N\r"
        }

        -re "ftp.*USER_FTP_FTP_FTP.*\\\[.*]" {
            send "N\r"
        }

        -re "telnet.*USER_TELNET_TELNET.*\\\[.*]" {
            send "N\r"
        }

        -re "e2fsck.*USER_E2FSPROGS_E2FSCK_E2FSCK.*\\\[.*]" {
            send "N\r"
        }

        -re "mke2fs.*USER_E2FSPROGS_MISC_MKE2FS.*\\\[.*]" {
            send "N\r"
        }

        -re "mkdosfs.*USER_DOSFSTOOLS_MKDOSFS.*\\\[.*]" {
            send "N\r"
        }

        -re "dosfsck.*USER_DOSFSTOOLS_DOSFSCK.*\\\[.*]" {
            send "N\r"
        }

        -re "watchdogd.*USER_WATCHDOGD.*\\\[.*]" {
            send "N\r"
        }

        -re "zmodem utils.*USER_LRZSZ_LRZSZ.*\\\[.*]" {
            send "N\r"
        }

        -re "mp3play.*USER_MP3PLAY_MP3PLAY.*\\\[.*]" {
            send "N\r"
        }

        -re "vplay.*USER_VPLAY_VPLAY.*\\\[.*]" {
            send "N\r"
        }

        -re "vrec.*USER_VPLAY_VREC.*\\\[.*]" {
            send "N\r"
        }

        -re "mixer.*USER_VPLAY_MIXER.*\\\[.*]" {
            send "N\r"
        }

        -re "gdbserver.*USER_GDB.*\\\[.*]" {
            send "N\r"
        }

        -re "mtd-utils.*USER_MTDUTILS.*\\\[.*]" {
            send "N\r"
        }

        -re "pThreads threaddemos.*USER_THREADDEMOS_THREADDEMOS.*\\\[.*]" {
            send "N\r"
        }

        -re "play.*USER_PLAY_PLAY.*\\\[.*]" {
            send "N\r"
        }

        -re "tone.*USER_PLAY_TONE.*\\\[.*]" {
            send "N\r"
        }

        -re "Trap tests.*USER_BLACKFIN_TRAPSTEST.*\\\[.*]" {
            send "N\r"
        }

        -re "Input event device test.*EVENT_TEST.*\\\[.*]" {
            send "N\r"
        }

        -re "Install ELF shared libraries.*INSTALL_ELF_SHARED_LIBS.*\\\[.*]" {
            send "N\r"
        }

        -re "Install FLAT shared libraries.*INSTALL_FLAT_SHARED_LIBS.*\\\[.*]" {
            send "N\r"
        }

        "\\\(*) \\\[*]" {
            sleep .05
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

##############################################################################
##############################################################################
spawn make config
while 1 {
    expect {
        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "Build libpng \\\(LIB_LIBPNG\\\) \\\[.*\[nN].*]" {
            send "N\r"
        }

        -re "Build libjpeg \\\(LIB_LIBJPEG\\\) \\\[.*\[nN].*]" {
            send "N\r"
        }

        -re "Build libG \\\(LIB_LIBG\\\) \\\[.*\[nN].*]" {
            send "N\r"
        }

        -re "Build liblzo \\\(LIB_LIBLZO\\\) \\\[.*\[nN].*]" {
            send "N\r"
        }

        -re "Build libZ \\\(LIB_ZLIB\\\) \\\[.*\[nN].*]" {
            send "N\r"
        }

        -re "Build ncurses.*LIB_NCURSES.*\\\[.*\[nN].*]" {
            send "N\r"
        }

        "\\\(*) \\\[*]" {
            sleep .05
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}
