#!/usr/bin/expect
#Before building, make sure change sda_pin to 2 and scl_pin to 4 in stamp.c.

source  ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
    expect {
        -re "AnalogDevices Products.* (\[0-9]+). $board_type.*choice.*\\\[.*]" {
            send "$expect_out(1,string)\r"
        }

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -re "Blackfin PPI Camera frame capture driver.*BFIN_PPIFCD.*\\\[.*]" {
            send "Y\r"
        }

        -re "GPIO Support.*GPIOLIB.*\\\[.*]" {
            send "Y\r"
        }

        -re "I2C support.*I2C\[^_].*\\\[.*]" {
            send "Y\r"
        }

        -re "I2C device interface.*I2C_CHARDEV.*\\\[.*]" {
            send "Y\r"
        }

        -re "GPIO-based bitbanging I2C.*I2C_GPIO.*\\\[.*]" { 
            if { $board_type == "BF533-STAMP" } {
                send "Y\r"
            } else {
                send "N\r"
            }
        }
# make sure use the right pin in the boards/stamp.c.
#        -re "SDA GPIO pin number.*I2C_BLACKFIN_GPIO_SDA.*\\\[.*]" {
#            if { $board_type == "BF533-STAMP" } {
#                send "2\r"
#            } else {
#                send "\r"
#            }
#        }
#
#        -re "SCL GPIO pin number.*I2C_BLACKFIN_GPIO_SCL.*\\\[.*]" {
#            if { $board_type == "BF533-STAMP" } {
#                send "4\r"
#            } else {
#                send "\r"
#            }
#        }

        -re "Blackfin TWI I2C support.*I2C_BLACKFIN_TWI.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "Y\r"
            } else {
                send "\r"
            }
        }

        -re "Blackfin TWI I2C clock.*I2C_BLACKFIN_TWI_CLK_KHZ.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "50\r"
            } else {
                send "\r"
            }
        }

        -re "Sound card support.*SOUND.*\\\[.*]" {
            send -s "N\r"
        }

        -re "PPIFCD test program.*USER_BLACKFIN_PPIFCDTEST.*\\\[.*]" {
            send "Y\r"
        }

        -re "CGI based Test Application for the PPI Frame Capture Driver.*USER_BLACKFIN_PPIFCDCGI.*\\\[.*]" {
            send "Y\r"
        }

         -nocase -re  " \\\(.*\\\) \\\[\[^\r]*] (\[ymn])" {
        }

        -re  " \\\(.*\\\) \\\[\[^\r]*] " {
            send "\r"
            sleep .1
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
