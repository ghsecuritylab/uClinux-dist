#!/usr/bin/expect

source ../kernel_config.exp

set extra_config "normal"

if { $argc >= 2} {
set extra_config [lindex $argv 1]
}

log_file [log_file_name $argv0.$extra_config ]

source  ../board_info.exp
send_user "Starting $argv0\n"

if { $extra_config == "in_buffer" || $extra_config == "normal" } {
send_log "\n#### Extra config is $extra_config.\n"
} else {
send_log "\n#### This config $extra_config is not supported. Sorry.\n"
exit
}

source ../ifconfig_ethaddr.exp

cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp

cd $uclinux_path
set timeout 300
spawn make config

while 1 {
    expect {

        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        "\\\(*) \\\[*]" {
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
    expect {

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" { 
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {   
            send "y\r"
        }

        -re "Use L1 memory for rx/tx packets.*BFIN_MAC_USE_L1.*\\\[.*]" {
            if { $extra_config == "in_buffer" } {
                send -s "N\r"
            } else {
                send "\r"
            }
        }

        -re "Number of transmit buffer packets.*BFIN_TX_DESC_NUM.*\\\[.*]" {
            if { $extra_config == "in_buffer" } {
                send -s "100\r"
            } else {
                send "\r"
            }
        }

        -re "Number of receive buffer packets.*BFIN_RX_DESC_NUM.*\\\[.*]" {
            if { $extra_config == "in_buffer" } {
                send -s "500\r"
            } else {
                send "\r"
            }
        }

        -re "netperf.*USER_NETPERF_NETPERF.*\\\[.*]" {
            send -s "Y\r"
        }

        -re "netserver.*USER_NETPERF_NETSERVER.*\\\[.*]" {
            send -s "Y\r"
        }

        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break        
        }
    }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp


cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
