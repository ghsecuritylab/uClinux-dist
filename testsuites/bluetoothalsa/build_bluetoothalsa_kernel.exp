#!/usr/bin/expect --

#
# Build Kernel for Bluetooth alsa audio test
#

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

set env(EXT2_BLOCKS) "12288"

cd $uclinux_path/testsuites
step "Make clean."
if { [source make_clean.exp] != 0 } {
    send_user "\n\nFail to make clean. Exit!\n\n"
    exit
}

cd $uclinux_path/testsuites
step "Make config."
source  make_default_config.exp

# Following make specific configuration for this case.
cd $uclinux_path
set timeout 300
spawn make config
while 1 {
    expect {
        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -nocase -re "\\\[\[^\r]*] (\\\(NEW\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "Virtual terminal.*VT.*\\\[.*]" {
            send "N\r"
        }

#Bellow is the config for Bluetooth driver
        -re "Bluetooth subsystem support.*BT.*\\\[.*]" {
            send "Y\r"
        }

        -re "L2CAP protocol support.*BT_L2CAP.*\\\[.*]" {
            send "Y\r"
        }

        -re "SCO links support.*BT_SCO.*\\\[.*]" {
            send "Y\r"
        }

        -re "RFCOMM protocol support.*BT_RFCOMM.*\\\[.*]" {
            send "Y\r"
        }

        -re "HCI USB driver.*BT_HCIBTUSB.*\\\[.*]" {
            send "Y\r"
        }

#Bellow is the config for USB host driver
        -re "Flash device in physical memory map.*MTD_PHYSMAP.*\\\[.*]" {
            #CONFIG_MTD_PHYSMAP claims the entire Async. Memory Space
            #need to entirely disable it while using various U-Connector boards
            send "N\r"
        }

        -re "Bank 3.*BANK_3.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "0xAAC2\r"
            } else {
                send "\r"
            }
        }

        -re "USB support.*USB_SUPPORT.*\\\[.*]" {
            send "Y\r"
        }

        -re "Support for Host-side USB.*USB.*\\\[.*]" {
            send "Y\r"
        }

        -re "SL811HS HCD support.*USB_SL811_HCD.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "Y\r"
            } else {
                send "\r"
            }
        }

        -re "Inventra Highspeed Dual Role Controller.*USB_MUSB_HDRC.*\\\[./././.]" {
            if { [string match "BF527-EZKIT*" $board_type] || $board_type == "BF548-EZKIT" } {
                send "Y\r"
            } else {
                send "\r"
            }
        }

        -re "Platform Glue Layer \\\[.*]" {
            send "Y\r"
        }

        -re "Disable DMA \\\(always use PIO\\\).*MUSB_PIO_ONLY.*\\\[.*]" {
            if { $board_type == "BF548-EZKIT" } {
                send "N\r"
            } elseif { [string match "BF527-EZKIT*" $board_type] } {
                send "Y\r"
            } else {
                send "\r"
            }
        }

#Bellow is the config for audio driver
        -re "I2C support \\\(I2C\\\).*\\\[.*]" {
            send "Y\r"
        }

        -re "Sound card support.*SOUND.*\\\[.*]" {
            send "Y\r"
        }

        -re "Advanced Linux Sound Architecture.*SND.*\\\[.*]" {
            send "Y\r"
        }

        -re "OSS Mixer API.*SND_MIXER_OSS.*\\\[.*]" {
            send "Y\r"
        }

        -re "OSS PCM .*digital audio.* API .*SND_PCM_OSS\\\).*\\\[.*]" {
            send "Y\r"
        }

        -re "ALSA for SoC audio support.*SND_SOC.*\\\[.*]" {
            send "M\r"
        }

        -re "SoC I2S Audio for the ADI Blackfin chip.*SND_BF5XX_I2S.*\\\[.*]" {
            if { [string match "BF527-EZKIT*" $board_type] } {
                send "M\r"
            } else {
                send "N\r"
            }
        }

        -re "SoC SSM2602 Audio Codec Add-On Card support.*SND_BF5XX_SOC_SSM2602.*\\\[.*]" {
            if { [string match "BF527-EZKIT*" $board_type] } {
                send "M\r"
            } else {
                send "N\r"
            }
        }

        -re "SoC AD73311.*Audio support for Blackfin.*SND_BF5XX_SOC_AD73311.*\\\[.*]" {
            send "N\r"
        }

        -re "SoC I2S\\\(TDM mode\\\) Audio for the ADI BF5xx chip.*SND_BF5XX_TDM.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "M\r"
            } else {
                send "N\r"
            }
        }

        -re "SoC AD1836 Audio support for BF5xx.*SND_BF5XX_SOC_AD1836.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "M\r"
            } else {
                send "N\r"
            }
        }

        -re "SoC AC97 Audio for the ADI BF5xx chip.*SND_BF5XX_AC97.*\\\[.*]" {
            send "N\r"
        }

        -re "Uncached DMA region.*(\[0-9]). Enable 2M DMA region.*DMA_UNCACHED_2M.*\[cC]hoice.*\\\[.*]" {
            send "$expect_out(1,string)\r"
        }

#Bellow is app&lib config
        -re "Binary format.*FLAT.*Shared-FLAT.*FDPIC.*\\\[.*]" {
            send "4\r"
        }

        -re "Bluez-utils.*USER_BLUEZ.*\\\[.*]" {
            send "Y\r"
        }

        -re "Bluetooth ALSA utility.*USER_BTSCO.*\\\[.*]" {
            send "Y\r"
        }

        -re "ALSA utils.*USER_ALSA_UTILS.*\\\[.*]" {
            send "Y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .05
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites
step "Make"
source make_kernel.exp

cd $uclinux_path/testsuites
step "Copy linux"
source copy_image.exp

send_user "Ending $argv0\n"
log_file
