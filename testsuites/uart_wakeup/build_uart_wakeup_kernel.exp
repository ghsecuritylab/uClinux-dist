#!/usr/bin/expect --

#
# Build Kernel for uart wake up test
#

source  ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites
step "Make default config."
source  make_default_config.exp

step "Make config"
cd $uclinux_path
set timeout 300
spawn make config
while 1 {
    expect {

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -re "Virtual terminal.*VT.*\\\[.*]" {
            send "N\r"
        }

        -re "USB support.*USB_SUPPORT.*\\\[.*]" {
            #USB driver now doesn't support power function
            send "N\r"
        }

        -re "UART Mode.*(\[0-9])\. PIO mode \\\(SERIAL_BFIN_PIO\\\).*\[cC]hoice\\\[.*]:" {
            send "$expect_out(1,string)\r"
        }

#Power Management
        -re "Power Management support \\\(PM\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "Suspend to RAM and standby \\\(SUSPEND\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "Power Saving Mode.*(\[0-9])\. Sleep \\\(PM_BFIN_SLEEP\\\).*\[cC]hoice\\\[.*]:" {
            send "$expect_out(1,string)\r"
        }

        -re "Allow Wakeup from Standby by GPIO.*PM_WAKEUP_BY_GPIO.*\\\[.*]" {
            send "N\r"
        }

        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites

step "Make kernel"

source   make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux image"

source   copy_image.exp

send_user "Ending $argv0\n"

log_file
