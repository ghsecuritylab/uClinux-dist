#!/usr/bin/expect --

#
# Build Kernel for LTP test
#
source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

# slab_slob = 1, enable slab
# slab_slob = 2, enable slob 

if { $argc == 4 } {
    set uclinux_path [lindex $argv 1]
    set wt_wb [lindex $argv 2]
    set slab_slob [lindex $argv 3]
    send_log "\n#### uclinux_path is $uclinux_path\n"
} else {
    if { $argc == 5 } {
        set uclinux_path [lindex $argv 1]
        set wt_wb [lindex $argv 2]
        set slab_slob [lindex $argv 3]
        send_log "\n#### uclinux_path is $uclinux_path\n"
    }
}


cd $uclinux_path/testsuites
step "Make config"
source  make_default_config.exp

cd $uclinux_path/testsuites
source make_config_reserve_mem.exp

cd $uclinux_path
set timeout 300
spawn make config

#tee "Begin the interactive process of configuration"
while 1 {
    expect {
        -re "AnalogDevices Products.* (\[0-9]+). $board_type.*choice.*\\\[.*]" {
            send "$expect_out(1,string)\r"
        }

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -re "Write through \\\(BFIN_WT\\\).*choice\\\[1-2\\\]:" {
            send "$wt_wb\r"
        }

        -re "Choose SLAB allocator.*SLAB.*SLOB.*choice\\\[1-3.\\\]" {
            if { $slab_slob == 1 } {
                send "1\r"
            }
            if { $slab_slob == 2 } {
                send "3\r"
            }
        }

        -re "Default Linux Capabilities.*SECURITY_CAPABILITIES.*\\\[.*]" {
            send "y\r"
        }

        -re "hostid.*USER_BUSYBOX_HOSTID.*\\\[.*]" {
            send "y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .1
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
