#!/usr/bin/expect

# Build script to test sport to spi add on board
#
# Usage:
#   ./build_sport_spi_kernel.exp  board_type spi_type
#


source  ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

set spi_type [lindex $argv 1]
send_log "\n#### spi type is $spi_type\n"

if { $argc < 2} {
    puts "Please input: board_type, spi_type(spi_adc or spi_flash)"
    exit
}

step "Apply patch."
cd $uclinux_path/linux-2.6.x/
set stamp_patch stamp.diff.$spi_type
exec patch -p0 < ../testsuites/sport_spi/$stamp_patch

cd $uclinux_path/testsuites
step "Make config."
source  make_default_config.exp

cd $uclinux_path
set timeout 300
spawn make config

while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        "\\\(*) \\\[*]" {
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
    expect {
        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -re "emulate SPI bus with Blackfin SPORT.*SPI_BFIN_SPORT.*\\\[.*]" {
            send "Y\r"
        }

        -re "Sound card support.*SOUND.*\\\[.*]" {
            send "N\r"
        }

        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites
step "Make"
source  make_kernel.exp

step "Reverse  patch."
cd $uclinux_path/linux-2.6.x/
exec patch -p0 -R < ../testsuites/sport_spi/$stamp_patch

cd $uclinux_path/testsuites
step "Copy linux"
source   copy_image.exp

send_user "Ending $argv0\n"
log_file
