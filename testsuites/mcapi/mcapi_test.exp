#!/usr/bin/expect

source ../kernel_config.exp
source ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit."
source ../spawn_kermit.exp

step "Reboot the kernel."
set bootargs  $bootargs_param11
source ../reboot_kernel.exp

step "Starting test"
set timeout 8

set allcases {msg1  msg2  pkt1  pkt2  scl1  scl2}
set bin_num [llength $allcases]
send_user "bin_num=$bin_num\n"

set case_num 0

incr case_num

send -s "cd /bin\r"
while 1 {
   expect {
      "root:/bin>" {
            break
      }

      timeout {
         break
         }
     }
}
expect "root:/bin>"
send -s "./icc_loader -l ./icc \r"
while 1 {
   expect {
     -re "OK.*COREB" {
                case_pass $case_num
                break
      }

     -re "Hardware Trace" {
         case_fail $case_num
         break
      }

      timeout {
                case_fail $case_num
                exit
      }
      }
}
send -s "\r"
expect {
       -re  "root:/bin>" {
                case_pass $case_num
       }

       timeout {
                case_fail $case_num
                exit
       }
}

for {set i 0} {$i < $bin_num} {incr i} {

set case_name [lindex $allcases $i]
sleep 3
incr case_num
set timeout 60
send -s "./icc_loader -f -e ./mcapi_$case_name \r"
while 1 {
   expect {
     -re "COREB: before run task.*mcapi_initialize.*create ep" {
               case_pass $case_num
               break
      }

     -re "Hardware Trace" {
         case_fail $case_num
         break
      }

      timeout {
                case_fail $case_num
                exit
      }
      }
}

send -s "\r"
expect {
       -re  "root:/bin>" {
                case_pass $case_num
       }

       timeout {
                case_fail $case_num
                exit
       }
}


incr case_num
send -s "rm /tmp/* 2> /dev/null\r"
expect "root:/bin>"
send -s "$case_name ; cat /tmp/*  2> /dev/null \r"
while 1 {
   expect {
     -re "CoreA Test PASSED" {

         case_pass $case_num
         break
      }

     -re "Hardware Trace" {
         case_fail $case_num
         break
      }

     -re "Test FAILED" {
         case_fail $case_num
         break
      }

      timeout {
         case_fail $case_num
         exit
      }
      }
}
send -s "\r"
expect {
       -re  "root:/bin>" {
                case_pass $case_num
       }

       timeout {
                case_fail $case_num
                exit
       }
}
sleep 4
}
send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n"

send_user "Ending $argv0\n"
log_file




