#!/usr/bin/expect

source ../kernel_config.exp
source ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit."
source ../spawn_kermit.exp

step "Reboot the kernel."
set bootargs  $bootargs_param11
source ../reboot_kernel.exp

step "Starting test"
set timeout 8

#set allcases {scl1  pkt2 }
set allcases {msg1  msg2  pkt1  pkt2 pkt3  scl1  scl2}
set bin_num [llength $allcases]
set test_round 100

send_user "bin_num=$bin_num\n"

set case_num 0

incr case_num

send -s "cd /bin\r"
while 1 {
   expect {
      "root:/bin>" {
            break
      }

      timeout {
         break
         }
     }
}
expect "root:/bin>"
send -s "./icc_loader -l ./icc \r"
while 1 {
   expect {
     -re "OK" {
                case_pass $case_num
                break
      }

     -re "Hardware Trace" {
         case_fail $case_num
         break
      }

      timeout {
                case_fail $case_num
                exit
      }
      }
}
send -s "\r"
expect {
       -re  "root:/bin>" {
                case_pass $case_num
       }

       timeout {
                case_fail $case_num
                exit
       }
}

for {set i 0} {$i < $bin_num*$test_round} {incr i} {

set test_case_num [ expr $i % $bin_num ] 

set case_name [lindex $allcases $test_case_num ]

send_log "!!!!!##### Case_name: $case_name, the [ expr ($i - $test_case_num)/$bin_num] time testing!\n"

sleep 3
incr case_num
set timeout 60
send -s "./icc_loader -f -e ./mcapi_$case_name \r"
while 1 {
   expect {
     -re "OK.*task_init_addr.*task_exit_addr" {
               expect {
	       -re  "root:/bin>" {
	                case_pass $case_num
               		break
	       }
	
	        -re "execption" {
	                case_fail $case_num
	                exit
	       }
	        timeout {
	                case_fail $case_num
	                exit
	       }
  	       }

      }

     -re "Hardware Trace" {
         case_fail $case_num
         break
      }

     -re "execption" {
         case_fail $case_num
         exit
      }

      timeout {
                case_fail $case_num
                exit
      }
      }
}

send -s "\r"
expect "root:/bin>"

set timeout 600

send -s "rm /tmp/* 2> /dev/null; dmesg -c > /dev/null\r"
sleep 3
expect "root:/bin>"

set case_status  0
#send -s "$case_name ; ls /tmp/* 2> /dev/null | xargs cat \r"
spawn rsh -l root $targetip  $case_name \; ls /tmp/*  2> /dev/null | xargs cat \;dmesg 
while 1 {
   expect {
     -re "CoreA Test PASSED.*CoreB Test PASSED" {
         case_pass $case_num
         set case_status  1
      }

     -re "Hardware Trace" {
         case_fail $case_num
         break
      }

     -re "execption" {
         case_fail $case_num
         break
      }

      timeout {
         case_fail $case_num
         exit
      }

      eof {
         if { $case_status != 1 } { 
         case_fail $case_num
         }
         break
      }
      }
}

set spawn_id $kermit_spawn_id 
send -s "\r"
expect "root:/bin>"
sleep 4
}
send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n"

send_user "Ending $argv0\n"
log_file




