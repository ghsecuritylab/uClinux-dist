#!/usr/bin/expect

#
# This test case is to test the g729 lib in bfgdots
#

source  ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

set TITLE [title "$argv0"]

step "Spawn kermit"
source ../spawn_kermit.exp

step "Reboot the kernel."
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated,
# for it is the default value.
# set bootargs  $bootargs_param0
source ../reboot_kernel.exp

step "test preparation"
if { $board_type == "BF518F-EZBRD" } {
    set TEST_PROG "g729ab_test g729ab_testsimgot"
} else {
    set TEST_PROG "g729ab_test g729ab_testsimgot g729ab_testfdpic g729ab_testfdpic_so"
}

set case_num 0
incr case_num
set timeout 15
sleep 10

send "ifconfig eth0 $targetip\n"
expect -re $kernel_prompt
expect -re "Up.*Full"

set timeout 120
send_user "exec $uclinux_path/testsuites/g729/cp_g729.sh\n"
if [ catch { exec $uclinux_path/testsuites/g729/cp_g729.sh } ] {
    send_user "FAIL: copy test_data to test folder\n"
    send_user "$errorInfo\n"
    case_fail $case_num
} else {
    send_user "PASS: copy test_data to test folder\n"
}

send_user "rcp -r $uclinux_path/testsuites/g729/g729/test_data root@$targetip:/var\n"
if [ catch { exec rcp -r $uclinux_path/testsuites/g729/g729/test_data root@$targetip:/var } ] {
    send_user "FAIL: copy test_data folder to target board\n"
    send_user "$errorInfo\n"
    case_fail $case_num
} else {
    send_user "PASS: copy test_data folder to target board\n"
}

send_user "rcp $uclinux_path/lib/libbfgdots/g729/test/alltests.sh root@$targetip:/var\n"
if [ catch { exec rcp $uclinux_path/lib/libbfgdots/g729/test/alltests.sh root@$targetip:/var } ] {
    send_user "FAIL: copy test scripts to target board\n"
    send_user "$errorInfo\n"
    case_fail $case_num
} else {
    send_user "PASS: copy test scripts to target board\n"
}

send_user "rcp $uclinux_path/lib/libbfgdots/g729/src.fdpic/libg729ab.so root@$targetip:/lib\n"
if [ catch { exec rcp $uclinux_path/lib/libbfgdots/g729/src.fdpic/libg729ab.so root@$targetip:/lib } ] {
    send_user "FAIL: copy g729 lib to target board\n"
    send_user "$errorInfo\n"
    case_fail $case_num
} else {
    send_user "PASS: copy g729 lib to target board\n"
}

foreach element $TEST_PROG {
    send_user "rcp $uclinux_path/lib/libbfgdots/g729/test/$element root@$targetip:/var\n"
    if [ catch { exec rcp $uclinux_path/lib/libbfgdots/g729/test/$element root@$targetip:/var } ] {
        send_user "FAIL: copy $element to target board\n"
        send_user "$errorInfo\n"
        case_fail $case_num
    } else {
        send_user "PASS: copy $element to target board\n"
    }
}


step "Start testing."
sleep 5
send "cd /var\r"
expect -re $kernel_prompt

foreach element $TEST_PROG {
    global case_num

    incr case_num
    set timeout 20
    send "./alltests.sh $element\r"
    while 1 {
        expect {
            -re "(\[eE]rror|\[fF]ail|not found).*$kernel_prompt" {
                case_fail $case_num
            }
            -re "G729AB Decoder.*$kernel_prompt" {
                case_pass $case_num
                break
            }
            timeout {
                send -s "\3"
                send_log "timeout\n"
                case_fail $case_num
            }
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
