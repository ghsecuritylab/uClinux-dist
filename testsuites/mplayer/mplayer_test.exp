#!/usr/bin/expect

source  ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE "[title "$argv0"]"

step "Spawn kermit"
source ../spawn_kermit.exp

step "Reboot the kernel."
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated,
# for it is the default value.
# set bootargs  $bootargs_param0
source ../reboot_kernel.exp

step "Start testing."
set case_num 0

set timeout 10
sleep 15
send "\r"
expect -re $kernel_prompt

if { $board_type == "BF548-EZKIT" } {
    set video_module "bf54x_lq043fb"
    set audio_module "snd_ssm2602"
} elseif {$board_type == "BF527-EZKIT" } {
    set video_module "bfin_t350mcqb_fb"
    set audio_module "snd_ssm2602"
} elseif {$board_type == "BF537-STAMP" } {
    set video_module "bf537_lq035"
    set audio_module "snd_ad73311"
}

incr case_num
send "modprobe $video_module\r"
while 1 {
    expect {
        -re "(modprobe:|\[fF]ail|\[eE]rror).*$kernel_prompt" {
            case_fail $case_num
        }
        -re "initializ.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
send "lsmod\r" 
while 1 {
    expect {
        -re "$video_module.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
send "modprobe $audio_module\r"
while 1 {
    expect {
        -re "(modprobe:|\[fF]ail|\[eE]rror).*$kernel_prompt" {
            case_fail $case_num
        }
        -re "mapping ok.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
send "lsmod\r" 
while 1 {
    expect {
        -re "$audio_module.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 30
incr case_num
if [ catch {exec rcp video.avi root@$targetip:/} ] {
    send_user "\nfail to copy video.avi\n"
    case_fail $case_num
} else {
    case_pass $case_num
}

set timeout 300
incr case_num
send "mplayer video.avi\r"
while 1 {
    expect {
        -re "Can\'t open audio device" {
            expect -re $kernel_prompt
            send_user "\nfail to open audio device\n"
            case_fail $case_num
        }
        -re "Exiting.*End of file.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n" 

send_user "Ending $argv0\n"

log_file
