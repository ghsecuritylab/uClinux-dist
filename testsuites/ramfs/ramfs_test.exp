#!/usr/bin/expect

#
#Test program to test reboot.
#
source ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit."
source ../spawn_kermit.exp

step "Reset the uboot."
source ../reset_to_uboot.exp

step "Start $TITLE\r"

send -s "reset\r"

for {set case_num 0} {$case_num < $count} {incr case_num} {

set timeout 5
expect {
        "Hit any key" {
        }
        timeout {
        }
}

sleep 1
set timeout 2
while 1 {
   send -s "\r"
   expect {
      ">" {
         break
      }
        timeout {
                case_fail $case_num
                exit
        }
   }
}

set timeout 30
send -s "tftpboot 0x1000000 $boot_image\r"
while 1 {
   expect {
      "TFTP" {
      }
      ">" {
         break
      }
	timeout {
                case_fail $case_num
		exit
	}
   }
}

if { $boot_image == "linux" } {
         set bootcmd bootelf
   } elseif { $boot_image == "uImage" } {
         set bootcmd bootm
}

set timeout 5
send -s "$bootcmd\r"
while 1 {
   expect {
      "Linux version" {
         break
      }
   }
}

expect ">"
send -s "\r"

set timeout 30
while 1 {
   expect {
	 -re $kernel_prompt {
                case_pass $case_num
		break
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
}

send_log "Wait for 1 minutes before reboot.\r"
sleep 60

set timeout 5
send -s "\r\r"
while 1 {
   expect {
	">" {
		break
	}

         timeout {
                case_fail $case_num
		exit
         }
   }
}

send -s "reboot\r"

}

send_log "\n$TITLE ............\[PASS\]\n"

send_user "Ending $argv0\n"
log_file

while 1 {
       expect {
         "Hit any key " {
             send "\r"
             expect ">"
             break
         }

         timeout {
             break
         }
      }
   }


