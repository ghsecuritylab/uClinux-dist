#!/usr/bin/expect --

#
# Build Kernel for USB network test of PLX NET2272
#
source ../kernel_config.exp
source ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites
step "Make default config."
source make_default_config.exp

step "Make config"

cd $uclinux_path
set timeout 300
spawn make config

while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "n\r"
        }

        -re "SPI controller driver for ADI Blackfin5xx.*SPI_BFIN.*\\\[.*]" {
            #GPIO_6 conflict
            send "M\r"
        }

        -re "USB support.*USB_SUPPORT.*\\\[.*]" {
            send "Y\r"
        }

        -re "Support for Host-side USB.*USB.*\\\[.*]" {
            send "N\r"
        }

        -re "USB Gadget Support.*USB_GADGET.*\\\[.*]" {
            send "Y\r"
        }

        -re "USB Peripheral Controller \\\[.*]" {
            send "Y\r"
        }

        -re "(\[0-9]+)\. PLX NET2272.*choice\\\[.*]:" {
            send "$expect_out(1,string)\r"
        }

        -re "USB Gadget Drivers \\\[.*]" {
            send "Y\r"
        }

        -re "(\[0-9]+)\. Ethernet Gadget.*choice\\\[.*]:" {
            send "$expect_out(1,string)\r"
        }

        -re "RNDIS support.*USB_ETH_RNDIS.*\\\[.*]" {
            send "Y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites
step "Make kernel"
source make_kernel.exp

cd $uclinux_path/testsuites
step "Copy linux image"
source copy_image.exp

send_user "Ending $argv0\n"
log_file
