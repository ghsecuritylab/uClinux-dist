#!/usr/bin/expect

source ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit."
source ../spawn_kermit.exp

step "Reboot the kernel."
source ../reboot_kernel.exp

step "Start tetsting."

set case_num 0

set timeout 8
set flag 0
send "ifconfig eth0 $targetip\r" 

while 1 {
   sleep 3
   expect {
      ">" {
          break
      }

      timeout {
            puts "Fail ifconfig. "
            break
         }
     }
}

sleep 3
send "ifconfig\r"
while 1 {

   expect {
      "$targetip" {        
         break
      }

      timeout {
            puts "Fail ifconfig. "         
            break
         }
     }
}
expect  -re $kernel_prompt
incr case_num

sleep 2
send "portmap -f &\r" 
while 1 {
   expect {
      -re "\[0-9]+" {
         set flag 1
         puts "\nportmap run success.\n"
                case_pass $case_num
         break
      }

      timeout {
                case_fail $case_num
	exit
         }
     }
}
expect  -re $kernel_prompt
sleep 8
incr case_num

set timeout 25
send -s "mount -o nolock,rsize=1024,wsize=1024 -t nfs $serverip:$uclinux_path/romfs /mnt\r" 
while 1 {
   expect {
        -re $kernel_prompt {
                case_pass $case_num
         break
      }

      timeout {
                case_fail $case_num
	exit
         }
     }
}

incr case_num

send -s "ls /mnt\r" 
while 1 {
   expect {
       "home" {         
         puts "******* nfs mount  success.\n"
                case_pass $case_num
         break
      }

      timeout {
                case_fail $case_num
	exit
         }
     }
}

incr case_num

expect ">"
send -s "umount /mnt\r" 
while 1 {
   expect {
       ">" {         
         puts "nfs umount.\n"
                case_pass $case_num
         break
      }

      timeout {
                case_fail $case_num
	exit
         }
     }
}

incr case_num

set timeout 3
send -s "ls /mnt\r"
while 1 {
   expect {
       "home" {
                case_fail $case_num
	exit
      }

      timeout {
                case_pass $case_num
        break
         }
     }
}

send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n"

send_user "Ending $argv0\n"
log_file



