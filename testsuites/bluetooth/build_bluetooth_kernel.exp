#!/usr/bin/expect --

#
# Build Kernel for Bluetooth USB Dongle test
#

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites

step "Make config."
source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
spawn make config

while 1 {
    expect {

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -re "Virtual terminal.*VT.*\\\[.*]" {
            send "n\r"
        }

        -re "Bluetooth subsystem support.*BT.*\\\[.*]" {
            send "y\r"
        }

        -re "L2CAP protocol support.*BT_L2CAP.*\\\[.*]" {
            send "y\r"
        }

        -re "SCO links support.*BT_SCO.*\\\[.*]" {
            send "y\r"
        }

        -re "RFCOMM protocol support.*BT_RFCOMM.*\\\[.*]" {
            send "y\r"
        }

        -re "RFCOMM TTY support.*BT_RFCOMM_TTY.*\\\[.*]" {
            send "y\r"
        }

        -re "BNEP protocol support.*BT_BNEP.*\\\[.*]" {
            send "y\r"
        }

        -re "Multicast filter support.*BT_BNEP_MC_FILTER.*\\\[.*]" {
            send "y\r"
        }

        -re "Protocol filter support.*BT_BNEP_PROTO_FILTER.*\\\[.*]" {
            send "y\r"
        }

        -re "HIDP protocol support.*BT_HIDP.*\\\[.*]" {
            send "y\r"
        }

        -re "HCI USB driver.*BT_HCIBTUSB.*\\\[.*]" {
            send "y\r"
        }

        -re "Flash device in physical memory map.*MTD_PHYSMAP.*\\\[.*]" {
#CONFIG_MTD_PHYSMAP claims the entire Async. Memory Space
#need to entirely disable it while using various U-Connector boards
            send "n\r"
        }

        -re "Bank 3.*BANK_3.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "0xAAC2\r"
            } else {
                send "\r"
            }
        }

        -re "USB support.*USB_SUPPORT.*\\\[.*]" {
            send "y\r"
        }

        -re "Support for Host-side USB.*USB.*\\\[.*]" {
            send "y\r"
        }

        -re "Inventra Highspeed Dual Role Controller.*USB_MUSB_HDRC.*\\\[.*]" {
            if { $board_type == "BF548-EZKIT" || [string match "BF527-EZKIT*" $board_type] } {
                send "y\r"
            } else {
                send "\r"
            }
        }

        -re "Disable DMA \\\(always use PIO\\\).*MUSB_PIO_ONLY.*\\\[.*]" {
            if { $board_type == "BF548-EZKIT" } {
                send "n\r"
            } elseif { [string match "BF527-EZKIT*" $board_type] } {
                send "y\r"
            } else {
                send "\r"
            }
        }

        -re "ISP1362 HCD support \\\(USB_ISP1362_HCD\\\).*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "y\r"
            } else {
                send "\r"
            }
        }

        -re "SL811HS HCD support.*USB_SL811_HCD.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "y\r"
            } else {
                send "\r"
            }
        }

        -re "Bluez-utils.*USER_BLUEZ.*\\\[.*]" {
            send "y\r"
        }

        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
