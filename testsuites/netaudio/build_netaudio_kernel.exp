#!/usr/bin/expect --

#
# Build Kernel for NetAudio test
#

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites
step "Make clean."
if { [source make_clean.exp] != 0 } {
    send_user "\n\nFail to make clean. Exit!\n\n"
    exit
}

cd $uclinux_path/testsuites
step "Make config."
source  make_default_config.exp

# Following make specific configuration for this case.
cd $uclinux_path
set timeout 300
spawn make config
while 1 {
    expect {
        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -nocase -re "\\\[\[^\r]*] (\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "Uncached DMA region.*(\[0-9]). Enable 2M DMA region.*DMA_UNCACHED_2M.*\[cC]hoice.*\\\[.*]" {
            send "$expect_out(1,string)\r"
        }

        -re "I2C support \\\(I2C\\\).*\\\[.*]" {
            send "Y\r"
        }

        -re "Sound card support.*SOUND.*\\\[.*]" {
            send "Y\r"
        }

        -re "Advanced Linux Sound Architecture.*SND.*\\\[.*]" {
            send "Y\r"
        }

        -re "OSS Mixer API.*SND_MIXER_OSS.*\\\[.*]" {
            send "Y\r"
        }

        -re "OSS PCM.*digital audio.*API.*SND_PCM_OSS.*\\\[.*]" {
            send "Y\r"
        }

        -re "Cascaded AD73322 Audio support for BF53x.*SND_BFIN_AD73322.*\\\[.*]" {
            send "N\r"
        }

        -re "ALSA for SoC audio support.*SND_SOC.*\\\[.*]" {
            send "Y\r"
        }

        -re "SoC I2S Audio for the ADI Blackfin chip.*SND_BF5XX_I2S.*\\\[.*]" {
            send "N\r"
        }

        -re "SoC I2S\\\(TDM mode\\\) Audio for the ADI BF5xx chip.*SND_BF5XX_TDM.*\\\[.*]" {
            send "Y\r"
        }

        -re "SoC AD1836 Audio support for BF5xx.*SND_BF5XX_SOC_AD1836.*\\\[.*]" {
            send "Y\r"
        }

        -re "SoC AD193X Audio support for Blackfin.*SND_BF5XX_SOC_AD193X.*\\\[.*]" {
            send "N\r"
        }

        -re "SoC AC97 Audio for the ADI BF5xx chip.*SND_BF5XX_AC97.*\\\[.*]" {
            send "N\r"
        }

        -re "SMB file system support \\\(.*\\\) \\\(SMB_FS\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "tone.*USER_PLAY_TONE.*\\\[.*]" {
            send "Y\r"
        }

        -re "samba \\\(USER_SAMBA\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "smbmount \\\(USER_SAMBA_SMBMOUNT\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "smbumount \\\(USER_SAMBA_SMBUMOUNT\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "NetAudio \\\(USER_NET_AUDIO\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "boa \\\(USER_BOA_SRC_BOA\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "Build faad2.*LIB_FAAD2\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "Build flac.*LIB_FLAC\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "Build tremor.*LIB_TREMOR\\\) \\\[.*]" {
            send "Y\r"
        }

#libao requires FDPIC ELF
#No such option now
#        -re "Build libao \\\(CONFIG_LIB_LIBAO_FORCE\\\) \\\[././.]" {
#            send "y\r"
#        }

        -re "Build libaudio.*LIB_LIBAUDIO\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "Build libmad.*LIB_LIBMAD\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "Build libid3tag.*LIB_LIBID3TAG\\\) \\\[.*]" {
            send "Y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites
step "Make"
source  make_kernel.exp

cd $uclinux_path/testsuites
step "Copy linux"
source   copy_image.exp

log_file
send_user "\nKernel building for NetAudio test finishes!\n"
