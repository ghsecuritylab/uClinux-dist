#!/usr/bin/expect

source  ../kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

set runs_number 10000000

step "Spawn kermit"
source ../spawn_kermit.exp

step "Reboot the kernel."
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated,
# for it is the default value.
# set bootargs 	$bootargs_param0
source ../reboot_kernel.exp

step "Start testing."
sleep 15
set case_num 0
set timeout 5

send "cd bin\r"
while 1 {
    expect {
        "bin*>" {
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 1000
incr case_num
send -s  "./dhrystone\r"
while 1 {
    expect {
        "Please give the number of runs through the benchmark:" {
            send "$runs_number \r"
        }
        -re "Microseconds.*: +(\[0-9.]+)" {
            set microseconds $expect_out(1,string)
        }
        -re "Dhrystones per Second: +(\[0-9]+\.\[0-9e+]+)" {
            set dhrystone_per_second  $expect_out(1,string)
        }
        "bin*>" {
            case_pass $case_num
            send_user "Microseconds is $microseconds ."
            send_user "Dhrystones per Second is $dhrystone_per_second ."
            break
        }

        timeout {
            case_fail $case_num
        }
    }
}

send_log "\n"
send_log "\n$TITLE ............\[PASS\]\n"

send_user "Ending $argv0\n"

log_file
