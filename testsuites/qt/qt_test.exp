#!/usr/bin/expect

source  ../kernel_config.exp
source  ../board_info.exp
source  ./config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

set TITLE [title "$argv0"]

if { $argc == 2 } {
    set build_opt [lindex $argv 1]
    send_user "\n#### Blackfin build Option is $build_opt\n"
} else {
    puts "Please input board type and build option:"
    puts "1: Static FLAT; 2: FDPIC"
    exit
}

if { $build_opt == 1 } {
    set build_type FLAT
} elseif { $build_opt == 2 } {
    set build_type FDPIC
} else {
    send_user "Build Option setting error\n"
    exit
}

append TITLE " ($build_type)"

step "Spawn kermit"
source ../spawn_kermit.exp

step "Reboot the kernel."
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated,
# for it is the default value.
# set bootargs  $bootargs_param0
source ../reboot_kernel.exp

step "Start testing."
set case_num 0
set timeout 10

sleep 15

send "ifconfig eth0 $targetip\r"
expect -re $kernel_prompt

send_user "cp $uclinux_path/staging/usr/qt/examples/widgets/calendarwidget/calendarwidget ./qt_sample\n"
if [ catch {exec cp $uclinux_path/staging/usr/qt/examples/widgets/calendarwidget/calendarwidget ./qt_sample} ] {
    send_user "FAIL: no qt sample\n"
    send_user "$errorInfo\n"
    case_fail $case_num
}

send_user "rcp ./qt_sample root@$targetip:/bin\n"
if [ catch {exec rcp ./qt_sample root@$targetip:/bin} ] {
    send_user "FAIL: rcp qt sample to target board\n"
    send_user "$errorInfo\n"
    case_fail $case_num
} else {
    send_user "PASS: rcp qt sample to target board\n"
}

#incr case_num
#set timeout 30
#send "dmesg|grep -i mouse\r"
#while 1 {
#    expect {
#        -re "\[0-9a-zA-Z]\r\n$kernel_prompt" {
#            send_user "USB Mouse is found\n"
#            case_pass $case_num
#            break
#        }
#        -re "$kernel_prompt" {
#            send_user "USB Mouse is not found\n"
#            case_fail $case_num
#        }
#        timeout {
#            send_user "Look for USB Mouse timeout\n"
#            case_fail $case_num
#        }
#    }
#}

set timeout 10
incr case_num
if { $board_type == "BF548-EZKIT" } {
    set module "bf54x_lq043fb"
} elseif {$board_type == "BF527-EZKIT" } {
    set module "bfin_t350mcqb_fb"
} elseif {$board_type == "BF527-EZKIT-V2" } {
    set module "bfin_lq035q1_fb"
} elseif { $board_type == "BF537-STAMP" } {
    set module "bf537_lq035"
} else {
    send_user "Wrong board_type $board_type\r"
    case_fail $case_num
}
send "modprobe $module\r"
while 1 {
    expect {
        -re "initializ.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

sleep 5
incr case_num
set timeout 30
send "qt_sample -qws\r"
while 1 {
    expect {
        -re "\r\n\[a-zA-Z0-9]" {
            case_fail $case_num
        }
        timeout {
            case_pass $case_num
            break
        }
    }
}

set timeout 10
incr case_num
send -s "\3"
while 1 {
    expect {
         -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

send_user "rcp -r $user/download/media root@$targetip:/\n"
if [ catch {exec rcp -r $user/download/media root@$targetip:/} ] {
    send_user "FAIL: copy sample pictures to target board\n"
    send_user "$errorInfo\n"
    case_fail $case_num
} else {
    send_user "PASS: copy sample pictures to target board\n"
}

send "cd media\r"
expect -re $kernel_prompt

incr case_num
set timeout 30
send "pictureflow -qws\r"
while 1 {
    expect {
        -re "\r\n\[a-zA-Z0-9]" {
            case_fail $case_num
        }
        timeout {
            case_pass $case_num
            break
        }
    }
}

set timeout 10
incr case_num
send -s "\3"
while 1 {
    expect {
         -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
