#!/usr/bin/expect

source ../kernel_config.exp
source  ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites

step "Make config."

source  make_default_config.exp

# Following make specific configuration for this case.

cd $uclinux_path
set timeout 300
set baud_rate_done_flag 0
spawn make config

#Since the i2c support is located after input device driver but some config in input need i2c to be selected, so run two rounds of selection.
#puts "Begin the interactive process of configuration"
while 1 {
    expect {
        -re  "AnalogDevices Products.* (\[0-9]+). $board_type.*choice.*\\\[.*]" {
            send "$expect_out(1,string)\r"
        }

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -re "I2C support.*I2C\[^_].*\\\[.*]" {
            send "Y\r"
        }

        -re "I2C device interface.*I2C_CHARDEV.*\\\[.*]" {
            send "Y\r"
        }

        -re "Blackfin TWI I2C support.*I2C_BLACKFIN_TWI.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "Y\r"
            } else {
                send "\r"
            }
        }

        -re "Blackfin TWI I2C clock.*I2C_BLACKFIN_TWI_CLK_KHZ.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "50\r"
            } else {
                send "\r"
            }
        }

        -nocase -re  " \\\(.*\\\) \\\[\[^\r]*] (\[ymn])" {
        }

        -re  " \\\(.*\\\) \\\[\[^\r]*] " {
            send "\r"
            sleep .1
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
    expect {
        -re "AnalogDevices Products.* (\[0-9]+). $board_type.*choice.*\\\[.*]" {
            send "$expect_out(1,string)\r"
        }

        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -re "Generic input layer.*needed for keyboard, mouse.*INPUT.*\\\[.*]" {
            send "Y\r"
        }

        -re "Event interface.*INPUT_EVDEV.*\\\[.*]" {
            send "Y\r"
        }

        -re "Miscellaneous devices.*INPUT_MISC.*\\\[.*]" {
            send "Y\r"
        }

        -re "Analog Devices ADXL34x Three-Axis Digital Accelerometer.*INPUT_ADXL34X.*\\\[.*]" {
            send -s "Y\r"
        }

         -re "support I2C bus connection.*INPUT_ADXL34X_I2C.*\\\[.*]" {
            send -s "Y\r"
        }

         -re "support SPI bus connection.*INPUT_ADXL34X_SPI.*\\\[.*]" {
            send -s "Y\r"
        }

        -nocase -re  " \\\(.*\\\) \\\[\[^\r]*] (\[ymn])" {
        }

        -re  " \\\(.*\\\) \\\[\[^\r]*] " {
            send "\r"
            sleep .1
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}


cd $uclinux_path/testsuites

step "Make"

source  make_kernel.exp

cd $uclinux_path/testsuites

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
