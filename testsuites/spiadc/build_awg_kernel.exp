#!/usr/bin/expect

source ../kernel_config.exp
source ../board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $uclinux_path/testsuites
step "Make config."
source  make_default_config.exp

cd $uclinux_path
set timeout 300
spawn make config
#puts "Begin the interactive process of configuration"
while 1 {
    expect {
        -re "Customize Kernel Settings.*DEFAULTS_KERNEL.*\\\[.*]" {
            send "y\r"
        }

        -re "Customize Application/Library Settings.*DEFAULTS_VENDOR.*\\\[.*]" {
            send "y\r"
        }

        -nocase -re "\\\[\[^\r]*] (\\\(new\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "Blackfin SPORT driver for direct raw access.*BFIN_SPORT.*\\\[.*]" {
            send "Y\r"
        }

        -re "Build libZ \\\(LIB_ZLIB\\\) \\\[\[^\r]*]" {
            send "Y\r"
        }

        -re "Build libpng \\\(LIB_LIBPNG\\\) \\\[(\[^\r]*)]" {
            send "Y\r"
        }

        -re "gnuplot.*USER_GNUPLOT.*\\\[.*]" {
            send "Y\r"
        }

        -re "Networked Software Defined Storage Oscilloscope.*USER_NDSO.*\\\[.*]" {
            send "N\r"
        }

        -re "Networked Arbitrary Waveform Genertor.*USER_AWG.*\\\[.*]" {
            send "Y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .05
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $uclinux_path/testsuites
step "Make"
source make_kernel.exp

cd $uclinux_path/testsuites
step "Copy linux"
source copy_image.exp

send_user "Ending $argv0\n"
log_file
