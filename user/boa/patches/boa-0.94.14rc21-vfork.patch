--- boa-0.94.14rc21/src/boa.c
+++ boa-0.94.14rc21/src/boa.c
@@ -24,7 +24,7 @@
 /* $Id: boa.c,v 1.99.2.26 2005/02/22 14:11:29 jnelson Exp $*/
 
 #include "boa.h"
-#include <sys/wait.h>
+
 /* globals */
 int backlog = SO_MAXCONN;
 time_t start_time;
@@ -51,7 +51,7 @@
 
 int main(int argc, char *argv[])
 {
-    int server_s,child_status;               /* boa socket */
+    int server_s;               /* boa socket */
     pid_t pid;
 
     /* set umask to u+rw, u-x, go-rwx */
@@ -91,7 +91,7 @@
 
     /* background ourself */
     if (do_fork) {
-        pid = vfork();
+        pid = fork();
     } else {
         pid = getpid();
     }
@@ -106,13 +106,6 @@
         break;
     default:
         /* parent, success */
-        if (do_fork) {
-            waitpid(pid, &child_status, 0);
-                 if (WEXITSTATUS(child_status) != 0) {
-                     perror("child process exit abnormally.");
-                 }
-        }
-
         if (pid_file != NULL) {
             FILE *PID_FILE = fopen(pid_file, "w");
             if (PID_FILE != NULL) {
--- boa-0.94.14rc21/src/cgi.c
+++ boa-0.94.14rc21/src/cgi.c
@@ -24,7 +24,6 @@
 /* $Id: cgi.c,v 1.83.2.28 2005/02/22 14:11:29 jnelson Exp $ */
 
 #include "boa.h"
-#include <sys/wait.h>
 
 static char *env_gen_extra(const char *key, const char *value,
                            unsigned int extra);
@@ -405,7 +404,7 @@
 
 int init_cgi(request * req)
 {
-    int child_pid,child_status;
+    int child_pid;
     int pipes[2];
     int use_pipes = 0;
 
@@ -446,7 +445,7 @@
         }
     }
 
-    child_pid = vfork();
+    child_pid = fork();
     switch (child_pid) {
     case -1:
         /* fork unsuccessful */
@@ -646,11 +645,6 @@
 
     default:
         /* parent */
-        waitpid(child_pid, &child_status, 0);
-           if (WEXITSTATUS(child_status) != 0) {
-                 perror("child process exit abnormally.");
-           }
-
         /* if here, fork was successful */
         if (verbose_cgi_logs) {
             log_error_time();
--- boa-0.94.14rc21/src/sublog.c
+++ boa-0.94.14rc21/src/sublog.c
@@ -34,7 +34,6 @@
 #include <netinet/in.h>
 #include <arpa/inet.h>
 #include "compat.h"
-#include <sys/wait.h>
 
 int open_pipe_fd(const char *command);
 int open_net_fd(const char *spec);
@@ -44,12 +43,12 @@
 int open_pipe_fd(const char *command)
 {
     int pipe_fds[2];
-    int pid,status;
+    int pid;
     /* "man pipe" says "filedes[0] is for reading,
      * filedes[1] is for writing. */
     if (pipe(pipe_fds) == -1)
         return -1;
-    pid = vfork();
+    pid = fork();
     if (pid == 0) {             /* child */
         close(pipe_fds[1]);
         if (pipe_fds[0] != 0) {
@@ -59,7 +58,6 @@
         execl("/bin/sh", "sh", "-c", command, (char *) 0);
         exit(EXIT_FAILURE);
     }
-    waitpid(pid, &status, 0);
     close(pipe_fds[0]);
     if (pid < 0) {
         close(pipe_fds[1]);
